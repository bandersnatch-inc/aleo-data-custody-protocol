import credits.aleo;
import protocol_core.aleo;
import protocol_transfers.aleo;
program secret_custody_protocol.aleo;


struct Proposal:
    validators as [address; 16u32];
    threshold as u8;
    current_validator_set_index as u64;

struct CustodyState:
    validator_set_index as u64;
    validator_fee as u64;
    requested as boolean;
    submitted_shares as u8;

struct Share:
    share_val as field;
    index as field;

struct Custody:
    initiator as address;
    data_address as address;
    threshold as u8;

struct ValidatorShareData:
    validator as address;
    share as Share;










function custody_data_as_program:
    input r0 as scalar.private;
    input r1 as [field; 15u32].private;
    input r2 as [address; 16u32].public;
    input r3 as u8.private;
    assert.neq self.caller self.signer;
    cast r0 into r4 as field;
    mul r0 group::GEN into r5;
    cast r5 into r6 as address;
    cast self.caller r6 r3 into r7 as Custody;
    hash.bhp256 r7 into r8 as field;
    mul 1field 1field into r9;
    sub r3 1u8 into r10;
    lt 0u8 r10 into r11;
    mul r1[0u32] r9 into r12;
    ternary r11 r12 0field into r13;
    add r4 r13 into r14;
    mul r9 1field into r15;
    sub r3 1u8 into r16;
    lt 1u8 r16 into r17;
    mul r1[1u32] r15 into r18;
    ternary r17 r18 0field into r19;
    add r14 r19 into r20;
    mul r15 1field into r21;
    sub r3 1u8 into r22;
    lt 2u8 r22 into r23;
    mul r1[2u32] r21 into r24;
    ternary r23 r24 0field into r25;
    add r20 r25 into r26;
    mul r21 1field into r27;
    sub r3 1u8 into r28;
    lt 3u8 r28 into r29;
    mul r1[3u32] r27 into r30;
    ternary r29 r30 0field into r31;
    add r26 r31 into r32;
    mul r27 1field into r33;
    sub r3 1u8 into r34;
    lt 4u8 r34 into r35;
    mul r1[4u32] r33 into r36;
    ternary r35 r36 0field into r37;
    add r32 r37 into r38;
    mul r33 1field into r39;
    sub r3 1u8 into r40;
    lt 5u8 r40 into r41;
    mul r1[5u32] r39 into r42;
    ternary r41 r42 0field into r43;
    add r38 r43 into r44;
    mul r39 1field into r45;
    sub r3 1u8 into r46;
    lt 6u8 r46 into r47;
    mul r1[6u32] r45 into r48;
    ternary r47 r48 0field into r49;
    add r44 r49 into r50;
    mul r45 1field into r51;
    sub r3 1u8 into r52;
    lt 7u8 r52 into r53;
    mul r1[7u32] r51 into r54;
    ternary r53 r54 0field into r55;
    add r50 r55 into r56;
    mul r51 1field into r57;
    sub r3 1u8 into r58;
    lt 8u8 r58 into r59;
    mul r1[8u32] r57 into r60;
    ternary r59 r60 0field into r61;
    add r56 r61 into r62;
    mul r57 1field into r63;
    sub r3 1u8 into r64;
    lt 9u8 r64 into r65;
    mul r1[9u32] r63 into r66;
    ternary r65 r66 0field into r67;
    add r62 r67 into r68;
    mul r63 1field into r69;
    sub r3 1u8 into r70;
    lt 10u8 r70 into r71;
    mul r1[10u32] r69 into r72;
    ternary r71 r72 0field into r73;
    add r68 r73 into r74;
    mul r69 1field into r75;
    sub r3 1u8 into r76;
    lt 11u8 r76 into r77;
    mul r1[11u32] r75 into r78;
    ternary r77 r78 0field into r79;
    add r74 r79 into r80;
    mul r75 1field into r81;
    sub r3 1u8 into r82;
    lt 12u8 r82 into r83;
    mul r1[12u32] r81 into r84;
    ternary r83 r84 0field into r85;
    add r80 r85 into r86;
    mul r81 1field into r87;
    sub r3 1u8 into r88;
    lt 13u8 r88 into r89;
    mul r1[13u32] r87 into r90;
    ternary r89 r90 0field into r91;
    add r86 r91 into r92;
    cast r92 1field into r93 as Share;
    cast r2[0u32] r93 into r94 as ValidatorShareData;
    mul 1field 2field into r95;
    sub r3 1u8 into r96;
    lt 0u8 r96 into r97;
    mul r1[0u32] r95 into r98;
    ternary r97 r98 0field into r99;
    add r4 r99 into r100;
    mul r95 2field into r101;
    sub r3 1u8 into r102;
    lt 1u8 r102 into r103;
    mul r1[1u32] r101 into r104;
    ternary r103 r104 0field into r105;
    add r100 r105 into r106;
    mul r101 2field into r107;
    sub r3 1u8 into r108;
    lt 2u8 r108 into r109;
    mul r1[2u32] r107 into r110;
    ternary r109 r110 0field into r111;
    add r106 r111 into r112;
    mul r107 2field into r113;
    sub r3 1u8 into r114;
    lt 3u8 r114 into r115;
    mul r1[3u32] r113 into r116;
    ternary r115 r116 0field into r117;
    add r112 r117 into r118;
    mul r113 2field into r119;
    sub r3 1u8 into r120;
    lt 4u8 r120 into r121;
    mul r1[4u32] r119 into r122;
    ternary r121 r122 0field into r123;
    add r118 r123 into r124;
    mul r119 2field into r125;
    sub r3 1u8 into r126;
    lt 5u8 r126 into r127;
    mul r1[5u32] r125 into r128;
    ternary r127 r128 0field into r129;
    add r124 r129 into r130;
    mul r125 2field into r131;
    sub r3 1u8 into r132;
    lt 6u8 r132 into r133;
    mul r1[6u32] r131 into r134;
    ternary r133 r134 0field into r135;
    add r130 r135 into r136;
    mul r131 2field into r137;
    sub r3 1u8 into r138;
    lt 7u8 r138 into r139;
    mul r1[7u32] r137 into r140;
    ternary r139 r140 0field into r141;
    add r136 r141 into r142;
    mul r137 2field into r143;
    sub r3 1u8 into r144;
    lt 8u8 r144 into r145;
    mul r1[8u32] r143 into r146;
    ternary r145 r146 0field into r147;
    add r142 r147 into r148;
    mul r143 2field into r149;
    sub r3 1u8 into r150;
    lt 9u8 r150 into r151;
    mul r1[9u32] r149 into r152;
    ternary r151 r152 0field into r153;
    add r148 r153 into r154;
    mul r149 2field into r155;
    sub r3 1u8 into r156;
    lt 10u8 r156 into r157;
    mul r1[10u32] r155 into r158;
    ternary r157 r158 0field into r159;
    add r154 r159 into r160;
    mul r155 2field into r161;
    sub r3 1u8 into r162;
    lt 11u8 r162 into r163;
    mul r1[11u32] r161 into r164;
    ternary r163 r164 0field into r165;
    add r160 r165 into r166;
    mul r161 2field into r167;
    sub r3 1u8 into r168;
    lt 12u8 r168 into r169;
    mul r1[12u32] r167 into r170;
    ternary r169 r170 0field into r171;
    add r166 r171 into r172;
    mul r167 2field into r173;
    sub r3 1u8 into r174;
    lt 13u8 r174 into r175;
    mul r1[13u32] r173 into r176;
    ternary r175 r176 0field into r177;
    add r172 r177 into r178;
    cast r178 2field into r179 as Share;
    cast r2[1u32] r179 into r180 as ValidatorShareData;
    mul 1field 3field into r181;
    sub r3 1u8 into r182;
    lt 0u8 r182 into r183;
    mul r1[0u32] r181 into r184;
    ternary r183 r184 0field into r185;
    add r4 r185 into r186;
    mul r181 3field into r187;
    sub r3 1u8 into r188;
    lt 1u8 r188 into r189;
    mul r1[1u32] r187 into r190;
    ternary r189 r190 0field into r191;
    add r186 r191 into r192;
    mul r187 3field into r193;
    sub r3 1u8 into r194;
    lt 2u8 r194 into r195;
    mul r1[2u32] r193 into r196;
    ternary r195 r196 0field into r197;
    add r192 r197 into r198;
    mul r193 3field into r199;
    sub r3 1u8 into r200;
    lt 3u8 r200 into r201;
    mul r1[3u32] r199 into r202;
    ternary r201 r202 0field into r203;
    add r198 r203 into r204;
    mul r199 3field into r205;
    sub r3 1u8 into r206;
    lt 4u8 r206 into r207;
    mul r1[4u32] r205 into r208;
    ternary r207 r208 0field into r209;
    add r204 r209 into r210;
    mul r205 3field into r211;
    sub r3 1u8 into r212;
    lt 5u8 r212 into r213;
    mul r1[5u32] r211 into r214;
    ternary r213 r214 0field into r215;
    add r210 r215 into r216;
    mul r211 3field into r217;
    sub r3 1u8 into r218;
    lt 6u8 r218 into r219;
    mul r1[6u32] r217 into r220;
    ternary r219 r220 0field into r221;
    add r216 r221 into r222;
    mul r217 3field into r223;
    sub r3 1u8 into r224;
    lt 7u8 r224 into r225;
    mul r1[7u32] r223 into r226;
    ternary r225 r226 0field into r227;
    add r222 r227 into r228;
    mul r223 3field into r229;
    sub r3 1u8 into r230;
    lt 8u8 r230 into r231;
    mul r1[8u32] r229 into r232;
    ternary r231 r232 0field into r233;
    add r228 r233 into r234;
    mul r229 3field into r235;
    sub r3 1u8 into r236;
    lt 9u8 r236 into r237;
    mul r1[9u32] r235 into r238;
    ternary r237 r238 0field into r239;
    add r234 r239 into r240;
    mul r235 3field into r241;
    sub r3 1u8 into r242;
    lt 10u8 r242 into r243;
    mul r1[10u32] r241 into r244;
    ternary r243 r244 0field into r245;
    add r240 r245 into r246;
    mul r241 3field into r247;
    sub r3 1u8 into r248;
    lt 11u8 r248 into r249;
    mul r1[11u32] r247 into r250;
    ternary r249 r250 0field into r251;
    add r246 r251 into r252;
    mul r247 3field into r253;
    sub r3 1u8 into r254;
    lt 12u8 r254 into r255;
    mul r1[12u32] r253 into r256;
    ternary r255 r256 0field into r257;
    add r252 r257 into r258;
    mul r253 3field into r259;
    sub r3 1u8 into r260;
    lt 13u8 r260 into r261;
    mul r1[13u32] r259 into r262;
    ternary r261 r262 0field into r263;
    add r258 r263 into r264;
    cast r264 3field into r265 as Share;
    cast r2[2u32] r265 into r266 as ValidatorShareData;
    mul 1field 4field into r267;
    sub r3 1u8 into r268;
    lt 0u8 r268 into r269;
    mul r1[0u32] r267 into r270;
    ternary r269 r270 0field into r271;
    add r4 r271 into r272;
    mul r267 4field into r273;
    sub r3 1u8 into r274;
    lt 1u8 r274 into r275;
    mul r1[1u32] r273 into r276;
    ternary r275 r276 0field into r277;
    add r272 r277 into r278;
    mul r273 4field into r279;
    sub r3 1u8 into r280;
    lt 2u8 r280 into r281;
    mul r1[2u32] r279 into r282;
    ternary r281 r282 0field into r283;
    add r278 r283 into r284;
    mul r279 4field into r285;
    sub r3 1u8 into r286;
    lt 3u8 r286 into r287;
    mul r1[3u32] r285 into r288;
    ternary r287 r288 0field into r289;
    add r284 r289 into r290;
    mul r285 4field into r291;
    sub r3 1u8 into r292;
    lt 4u8 r292 into r293;
    mul r1[4u32] r291 into r294;
    ternary r293 r294 0field into r295;
    add r290 r295 into r296;
    mul r291 4field into r297;
    sub r3 1u8 into r298;
    lt 5u8 r298 into r299;
    mul r1[5u32] r297 into r300;
    ternary r299 r300 0field into r301;
    add r296 r301 into r302;
    mul r297 4field into r303;
    sub r3 1u8 into r304;
    lt 6u8 r304 into r305;
    mul r1[6u32] r303 into r306;
    ternary r305 r306 0field into r307;
    add r302 r307 into r308;
    mul r303 4field into r309;
    sub r3 1u8 into r310;
    lt 7u8 r310 into r311;
    mul r1[7u32] r309 into r312;
    ternary r311 r312 0field into r313;
    add r308 r313 into r314;
    mul r309 4field into r315;
    sub r3 1u8 into r316;
    lt 8u8 r316 into r317;
    mul r1[8u32] r315 into r318;
    ternary r317 r318 0field into r319;
    add r314 r319 into r320;
    mul r315 4field into r321;
    sub r3 1u8 into r322;
    lt 9u8 r322 into r323;
    mul r1[9u32] r321 into r324;
    ternary r323 r324 0field into r325;
    add r320 r325 into r326;
    mul r321 4field into r327;
    sub r3 1u8 into r328;
    lt 10u8 r328 into r329;
    mul r1[10u32] r327 into r330;
    ternary r329 r330 0field into r331;
    add r326 r331 into r332;
    mul r327 4field into r333;
    sub r3 1u8 into r334;
    lt 11u8 r334 into r335;
    mul r1[11u32] r333 into r336;
    ternary r335 r336 0field into r337;
    add r332 r337 into r338;
    mul r333 4field into r339;
    sub r3 1u8 into r340;
    lt 12u8 r340 into r341;
    mul r1[12u32] r339 into r342;
    ternary r341 r342 0field into r343;
    add r338 r343 into r344;
    mul r339 4field into r345;
    sub r3 1u8 into r346;
    lt 13u8 r346 into r347;
    mul r1[13u32] r345 into r348;
    ternary r347 r348 0field into r349;
    add r344 r349 into r350;
    cast r350 4field into r351 as Share;
    cast r2[3u32] r351 into r352 as ValidatorShareData;
    mul 1field 5field into r353;
    sub r3 1u8 into r354;
    lt 0u8 r354 into r355;
    mul r1[0u32] r353 into r356;
    ternary r355 r356 0field into r357;
    add r4 r357 into r358;
    mul r353 5field into r359;
    sub r3 1u8 into r360;
    lt 1u8 r360 into r361;
    mul r1[1u32] r359 into r362;
    ternary r361 r362 0field into r363;
    add r358 r363 into r364;
    mul r359 5field into r365;
    sub r3 1u8 into r366;
    lt 2u8 r366 into r367;
    mul r1[2u32] r365 into r368;
    ternary r367 r368 0field into r369;
    add r364 r369 into r370;
    mul r365 5field into r371;
    sub r3 1u8 into r372;
    lt 3u8 r372 into r373;
    mul r1[3u32] r371 into r374;
    ternary r373 r374 0field into r375;
    add r370 r375 into r376;
    mul r371 5field into r377;
    sub r3 1u8 into r378;
    lt 4u8 r378 into r379;
    mul r1[4u32] r377 into r380;
    ternary r379 r380 0field into r381;
    add r376 r381 into r382;
    mul r377 5field into r383;
    sub r3 1u8 into r384;
    lt 5u8 r384 into r385;
    mul r1[5u32] r383 into r386;
    ternary r385 r386 0field into r387;
    add r382 r387 into r388;
    mul r383 5field into r389;
    sub r3 1u8 into r390;
    lt 6u8 r390 into r391;
    mul r1[6u32] r389 into r392;
    ternary r391 r392 0field into r393;
    add r388 r393 into r394;
    mul r389 5field into r395;
    sub r3 1u8 into r396;
    lt 7u8 r396 into r397;
    mul r1[7u32] r395 into r398;
    ternary r397 r398 0field into r399;
    add r394 r399 into r400;
    mul r395 5field into r401;
    sub r3 1u8 into r402;
    lt 8u8 r402 into r403;
    mul r1[8u32] r401 into r404;
    ternary r403 r404 0field into r405;
    add r400 r405 into r406;
    mul r401 5field into r407;
    sub r3 1u8 into r408;
    lt 9u8 r408 into r409;
    mul r1[9u32] r407 into r410;
    ternary r409 r410 0field into r411;
    add r406 r411 into r412;
    mul r407 5field into r413;
    sub r3 1u8 into r414;
    lt 10u8 r414 into r415;
    mul r1[10u32] r413 into r416;
    ternary r415 r416 0field into r417;
    add r412 r417 into r418;
    mul r413 5field into r419;
    sub r3 1u8 into r420;
    lt 11u8 r420 into r421;
    mul r1[11u32] r419 into r422;
    ternary r421 r422 0field into r423;
    add r418 r423 into r424;
    mul r419 5field into r425;
    sub r3 1u8 into r426;
    lt 12u8 r426 into r427;
    mul r1[12u32] r425 into r428;
    ternary r427 r428 0field into r429;
    add r424 r429 into r430;
    mul r425 5field into r431;
    sub r3 1u8 into r432;
    lt 13u8 r432 into r433;
    mul r1[13u32] r431 into r434;
    ternary r433 r434 0field into r435;
    add r430 r435 into r436;
    cast r436 5field into r437 as Share;
    cast r2[4u32] r437 into r438 as ValidatorShareData;
    mul 1field 6field into r439;
    sub r3 1u8 into r440;
    lt 0u8 r440 into r441;
    mul r1[0u32] r439 into r442;
    ternary r441 r442 0field into r443;
    add r4 r443 into r444;
    mul r439 6field into r445;
    sub r3 1u8 into r446;
    lt 1u8 r446 into r447;
    mul r1[1u32] r445 into r448;
    ternary r447 r448 0field into r449;
    add r444 r449 into r450;
    mul r445 6field into r451;
    sub r3 1u8 into r452;
    lt 2u8 r452 into r453;
    mul r1[2u32] r451 into r454;
    ternary r453 r454 0field into r455;
    add r450 r455 into r456;
    mul r451 6field into r457;
    sub r3 1u8 into r458;
    lt 3u8 r458 into r459;
    mul r1[3u32] r457 into r460;
    ternary r459 r460 0field into r461;
    add r456 r461 into r462;
    mul r457 6field into r463;
    sub r3 1u8 into r464;
    lt 4u8 r464 into r465;
    mul r1[4u32] r463 into r466;
    ternary r465 r466 0field into r467;
    add r462 r467 into r468;
    mul r463 6field into r469;
    sub r3 1u8 into r470;
    lt 5u8 r470 into r471;
    mul r1[5u32] r469 into r472;
    ternary r471 r472 0field into r473;
    add r468 r473 into r474;
    mul r469 6field into r475;
    sub r3 1u8 into r476;
    lt 6u8 r476 into r477;
    mul r1[6u32] r475 into r478;
    ternary r477 r478 0field into r479;
    add r474 r479 into r480;
    mul r475 6field into r481;
    sub r3 1u8 into r482;
    lt 7u8 r482 into r483;
    mul r1[7u32] r481 into r484;
    ternary r483 r484 0field into r485;
    add r480 r485 into r486;
    mul r481 6field into r487;
    sub r3 1u8 into r488;
    lt 8u8 r488 into r489;
    mul r1[8u32] r487 into r490;
    ternary r489 r490 0field into r491;
    add r486 r491 into r492;
    mul r487 6field into r493;
    sub r3 1u8 into r494;
    lt 9u8 r494 into r495;
    mul r1[9u32] r493 into r496;
    ternary r495 r496 0field into r497;
    add r492 r497 into r498;
    mul r493 6field into r499;
    sub r3 1u8 into r500;
    lt 10u8 r500 into r501;
    mul r1[10u32] r499 into r502;
    ternary r501 r502 0field into r503;
    add r498 r503 into r504;
    mul r499 6field into r505;
    sub r3 1u8 into r506;
    lt 11u8 r506 into r507;
    mul r1[11u32] r505 into r508;
    ternary r507 r508 0field into r509;
    add r504 r509 into r510;
    mul r505 6field into r511;
    sub r3 1u8 into r512;
    lt 12u8 r512 into r513;
    mul r1[12u32] r511 into r514;
    ternary r513 r514 0field into r515;
    add r510 r515 into r516;
    mul r511 6field into r517;
    sub r3 1u8 into r518;
    lt 13u8 r518 into r519;
    mul r1[13u32] r517 into r520;
    ternary r519 r520 0field into r521;
    add r516 r521 into r522;
    cast r522 6field into r523 as Share;
    cast r2[5u32] r523 into r524 as ValidatorShareData;
    mul 1field 7field into r525;
    sub r3 1u8 into r526;
    lt 0u8 r526 into r527;
    mul r1[0u32] r525 into r528;
    ternary r527 r528 0field into r529;
    add r4 r529 into r530;
    mul r525 7field into r531;
    sub r3 1u8 into r532;
    lt 1u8 r532 into r533;
    mul r1[1u32] r531 into r534;
    ternary r533 r534 0field into r535;
    add r530 r535 into r536;
    mul r531 7field into r537;
    sub r3 1u8 into r538;
    lt 2u8 r538 into r539;
    mul r1[2u32] r537 into r540;
    ternary r539 r540 0field into r541;
    add r536 r541 into r542;
    mul r537 7field into r543;
    sub r3 1u8 into r544;
    lt 3u8 r544 into r545;
    mul r1[3u32] r543 into r546;
    ternary r545 r546 0field into r547;
    add r542 r547 into r548;
    mul r543 7field into r549;
    sub r3 1u8 into r550;
    lt 4u8 r550 into r551;
    mul r1[4u32] r549 into r552;
    ternary r551 r552 0field into r553;
    add r548 r553 into r554;
    mul r549 7field into r555;
    sub r3 1u8 into r556;
    lt 5u8 r556 into r557;
    mul r1[5u32] r555 into r558;
    ternary r557 r558 0field into r559;
    add r554 r559 into r560;
    mul r555 7field into r561;
    sub r3 1u8 into r562;
    lt 6u8 r562 into r563;
    mul r1[6u32] r561 into r564;
    ternary r563 r564 0field into r565;
    add r560 r565 into r566;
    mul r561 7field into r567;
    sub r3 1u8 into r568;
    lt 7u8 r568 into r569;
    mul r1[7u32] r567 into r570;
    ternary r569 r570 0field into r571;
    add r566 r571 into r572;
    mul r567 7field into r573;
    sub r3 1u8 into r574;
    lt 8u8 r574 into r575;
    mul r1[8u32] r573 into r576;
    ternary r575 r576 0field into r577;
    add r572 r577 into r578;
    mul r573 7field into r579;
    sub r3 1u8 into r580;
    lt 9u8 r580 into r581;
    mul r1[9u32] r579 into r582;
    ternary r581 r582 0field into r583;
    add r578 r583 into r584;
    mul r579 7field into r585;
    sub r3 1u8 into r586;
    lt 10u8 r586 into r587;
    mul r1[10u32] r585 into r588;
    ternary r587 r588 0field into r589;
    add r584 r589 into r590;
    mul r585 7field into r591;
    sub r3 1u8 into r592;
    lt 11u8 r592 into r593;
    mul r1[11u32] r591 into r594;
    ternary r593 r594 0field into r595;
    add r590 r595 into r596;
    mul r591 7field into r597;
    sub r3 1u8 into r598;
    lt 12u8 r598 into r599;
    mul r1[12u32] r597 into r600;
    ternary r599 r600 0field into r601;
    add r596 r601 into r602;
    mul r597 7field into r603;
    sub r3 1u8 into r604;
    lt 13u8 r604 into r605;
    mul r1[13u32] r603 into r606;
    ternary r605 r606 0field into r607;
    add r602 r607 into r608;
    cast r608 7field into r609 as Share;
    cast r2[6u32] r609 into r610 as ValidatorShareData;
    mul 1field 8field into r611;
    sub r3 1u8 into r612;
    lt 0u8 r612 into r613;
    mul r1[0u32] r611 into r614;
    ternary r613 r614 0field into r615;
    add r4 r615 into r616;
    mul r611 8field into r617;
    sub r3 1u8 into r618;
    lt 1u8 r618 into r619;
    mul r1[1u32] r617 into r620;
    ternary r619 r620 0field into r621;
    add r616 r621 into r622;
    mul r617 8field into r623;
    sub r3 1u8 into r624;
    lt 2u8 r624 into r625;
    mul r1[2u32] r623 into r626;
    ternary r625 r626 0field into r627;
    add r622 r627 into r628;
    mul r623 8field into r629;
    sub r3 1u8 into r630;
    lt 3u8 r630 into r631;
    mul r1[3u32] r629 into r632;
    ternary r631 r632 0field into r633;
    add r628 r633 into r634;
    mul r629 8field into r635;
    sub r3 1u8 into r636;
    lt 4u8 r636 into r637;
    mul r1[4u32] r635 into r638;
    ternary r637 r638 0field into r639;
    add r634 r639 into r640;
    mul r635 8field into r641;
    sub r3 1u8 into r642;
    lt 5u8 r642 into r643;
    mul r1[5u32] r641 into r644;
    ternary r643 r644 0field into r645;
    add r640 r645 into r646;
    mul r641 8field into r647;
    sub r3 1u8 into r648;
    lt 6u8 r648 into r649;
    mul r1[6u32] r647 into r650;
    ternary r649 r650 0field into r651;
    add r646 r651 into r652;
    mul r647 8field into r653;
    sub r3 1u8 into r654;
    lt 7u8 r654 into r655;
    mul r1[7u32] r653 into r656;
    ternary r655 r656 0field into r657;
    add r652 r657 into r658;
    mul r653 8field into r659;
    sub r3 1u8 into r660;
    lt 8u8 r660 into r661;
    mul r1[8u32] r659 into r662;
    ternary r661 r662 0field into r663;
    add r658 r663 into r664;
    mul r659 8field into r665;
    sub r3 1u8 into r666;
    lt 9u8 r666 into r667;
    mul r1[9u32] r665 into r668;
    ternary r667 r668 0field into r669;
    add r664 r669 into r670;
    mul r665 8field into r671;
    sub r3 1u8 into r672;
    lt 10u8 r672 into r673;
    mul r1[10u32] r671 into r674;
    ternary r673 r674 0field into r675;
    add r670 r675 into r676;
    mul r671 8field into r677;
    sub r3 1u8 into r678;
    lt 11u8 r678 into r679;
    mul r1[11u32] r677 into r680;
    ternary r679 r680 0field into r681;
    add r676 r681 into r682;
    mul r677 8field into r683;
    sub r3 1u8 into r684;
    lt 12u8 r684 into r685;
    mul r1[12u32] r683 into r686;
    ternary r685 r686 0field into r687;
    add r682 r687 into r688;
    mul r683 8field into r689;
    sub r3 1u8 into r690;
    lt 13u8 r690 into r691;
    mul r1[13u32] r689 into r692;
    ternary r691 r692 0field into r693;
    add r688 r693 into r694;
    cast r694 8field into r695 as Share;
    cast r2[7u32] r695 into r696 as ValidatorShareData;
    mul 1field 9field into r697;
    sub r3 1u8 into r698;
    lt 0u8 r698 into r699;
    mul r1[0u32] r697 into r700;
    ternary r699 r700 0field into r701;
    add r4 r701 into r702;
    mul r697 9field into r703;
    sub r3 1u8 into r704;
    lt 1u8 r704 into r705;
    mul r1[1u32] r703 into r706;
    ternary r705 r706 0field into r707;
    add r702 r707 into r708;
    mul r703 9field into r709;
    sub r3 1u8 into r710;
    lt 2u8 r710 into r711;
    mul r1[2u32] r709 into r712;
    ternary r711 r712 0field into r713;
    add r708 r713 into r714;
    mul r709 9field into r715;
    sub r3 1u8 into r716;
    lt 3u8 r716 into r717;
    mul r1[3u32] r715 into r718;
    ternary r717 r718 0field into r719;
    add r714 r719 into r720;
    mul r715 9field into r721;
    sub r3 1u8 into r722;
    lt 4u8 r722 into r723;
    mul r1[4u32] r721 into r724;
    ternary r723 r724 0field into r725;
    add r720 r725 into r726;
    mul r721 9field into r727;
    sub r3 1u8 into r728;
    lt 5u8 r728 into r729;
    mul r1[5u32] r727 into r730;
    ternary r729 r730 0field into r731;
    add r726 r731 into r732;
    mul r727 9field into r733;
    sub r3 1u8 into r734;
    lt 6u8 r734 into r735;
    mul r1[6u32] r733 into r736;
    ternary r735 r736 0field into r737;
    add r732 r737 into r738;
    mul r733 9field into r739;
    sub r3 1u8 into r740;
    lt 7u8 r740 into r741;
    mul r1[7u32] r739 into r742;
    ternary r741 r742 0field into r743;
    add r738 r743 into r744;
    mul r739 9field into r745;
    sub r3 1u8 into r746;
    lt 8u8 r746 into r747;
    mul r1[8u32] r745 into r748;
    ternary r747 r748 0field into r749;
    add r744 r749 into r750;
    mul r745 9field into r751;
    sub r3 1u8 into r752;
    lt 9u8 r752 into r753;
    mul r1[9u32] r751 into r754;
    ternary r753 r754 0field into r755;
    add r750 r755 into r756;
    mul r751 9field into r757;
    sub r3 1u8 into r758;
    lt 10u8 r758 into r759;
    mul r1[10u32] r757 into r760;
    ternary r759 r760 0field into r761;
    add r756 r761 into r762;
    mul r757 9field into r763;
    sub r3 1u8 into r764;
    lt 11u8 r764 into r765;
    mul r1[11u32] r763 into r766;
    ternary r765 r766 0field into r767;
    add r762 r767 into r768;
    mul r763 9field into r769;
    sub r3 1u8 into r770;
    lt 12u8 r770 into r771;
    mul r1[12u32] r769 into r772;
    ternary r771 r772 0field into r773;
    add r768 r773 into r774;
    mul r769 9field into r775;
    sub r3 1u8 into r776;
    lt 13u8 r776 into r777;
    mul r1[13u32] r775 into r778;
    ternary r777 r778 0field into r779;
    add r774 r779 into r780;
    cast r780 9field into r781 as Share;
    cast r2[8u32] r781 into r782 as ValidatorShareData;
    mul 1field 10field into r783;
    sub r3 1u8 into r784;
    lt 0u8 r784 into r785;
    mul r1[0u32] r783 into r786;
    ternary r785 r786 0field into r787;
    add r4 r787 into r788;
    mul r783 10field into r789;
    sub r3 1u8 into r790;
    lt 1u8 r790 into r791;
    mul r1[1u32] r789 into r792;
    ternary r791 r792 0field into r793;
    add r788 r793 into r794;
    mul r789 10field into r795;
    sub r3 1u8 into r796;
    lt 2u8 r796 into r797;
    mul r1[2u32] r795 into r798;
    ternary r797 r798 0field into r799;
    add r794 r799 into r800;
    mul r795 10field into r801;
    sub r3 1u8 into r802;
    lt 3u8 r802 into r803;
    mul r1[3u32] r801 into r804;
    ternary r803 r804 0field into r805;
    add r800 r805 into r806;
    mul r801 10field into r807;
    sub r3 1u8 into r808;
    lt 4u8 r808 into r809;
    mul r1[4u32] r807 into r810;
    ternary r809 r810 0field into r811;
    add r806 r811 into r812;
    mul r807 10field into r813;
    sub r3 1u8 into r814;
    lt 5u8 r814 into r815;
    mul r1[5u32] r813 into r816;
    ternary r815 r816 0field into r817;
    add r812 r817 into r818;
    mul r813 10field into r819;
    sub r3 1u8 into r820;
    lt 6u8 r820 into r821;
    mul r1[6u32] r819 into r822;
    ternary r821 r822 0field into r823;
    add r818 r823 into r824;
    mul r819 10field into r825;
    sub r3 1u8 into r826;
    lt 7u8 r826 into r827;
    mul r1[7u32] r825 into r828;
    ternary r827 r828 0field into r829;
    add r824 r829 into r830;
    mul r825 10field into r831;
    sub r3 1u8 into r832;
    lt 8u8 r832 into r833;
    mul r1[8u32] r831 into r834;
    ternary r833 r834 0field into r835;
    add r830 r835 into r836;
    mul r831 10field into r837;
    sub r3 1u8 into r838;
    lt 9u8 r838 into r839;
    mul r1[9u32] r837 into r840;
    ternary r839 r840 0field into r841;
    add r836 r841 into r842;
    mul r837 10field into r843;
    sub r3 1u8 into r844;
    lt 10u8 r844 into r845;
    mul r1[10u32] r843 into r846;
    ternary r845 r846 0field into r847;
    add r842 r847 into r848;
    mul r843 10field into r849;
    sub r3 1u8 into r850;
    lt 11u8 r850 into r851;
    mul r1[11u32] r849 into r852;
    ternary r851 r852 0field into r853;
    add r848 r853 into r854;
    mul r849 10field into r855;
    sub r3 1u8 into r856;
    lt 12u8 r856 into r857;
    mul r1[12u32] r855 into r858;
    ternary r857 r858 0field into r859;
    add r854 r859 into r860;
    mul r855 10field into r861;
    sub r3 1u8 into r862;
    lt 13u8 r862 into r863;
    mul r1[13u32] r861 into r864;
    ternary r863 r864 0field into r865;
    add r860 r865 into r866;
    cast r866 10field into r867 as Share;
    cast r2[9u32] r867 into r868 as ValidatorShareData;
    mul 1field 11field into r869;
    sub r3 1u8 into r870;
    lt 0u8 r870 into r871;
    mul r1[0u32] r869 into r872;
    ternary r871 r872 0field into r873;
    add r4 r873 into r874;
    mul r869 11field into r875;
    sub r3 1u8 into r876;
    lt 1u8 r876 into r877;
    mul r1[1u32] r875 into r878;
    ternary r877 r878 0field into r879;
    add r874 r879 into r880;
    mul r875 11field into r881;
    sub r3 1u8 into r882;
    lt 2u8 r882 into r883;
    mul r1[2u32] r881 into r884;
    ternary r883 r884 0field into r885;
    add r880 r885 into r886;
    mul r881 11field into r887;
    sub r3 1u8 into r888;
    lt 3u8 r888 into r889;
    mul r1[3u32] r887 into r890;
    ternary r889 r890 0field into r891;
    add r886 r891 into r892;
    mul r887 11field into r893;
    sub r3 1u8 into r894;
    lt 4u8 r894 into r895;
    mul r1[4u32] r893 into r896;
    ternary r895 r896 0field into r897;
    add r892 r897 into r898;
    mul r893 11field into r899;
    sub r3 1u8 into r900;
    lt 5u8 r900 into r901;
    mul r1[5u32] r899 into r902;
    ternary r901 r902 0field into r903;
    add r898 r903 into r904;
    mul r899 11field into r905;
    sub r3 1u8 into r906;
    lt 6u8 r906 into r907;
    mul r1[6u32] r905 into r908;
    ternary r907 r908 0field into r909;
    add r904 r909 into r910;
    mul r905 11field into r911;
    sub r3 1u8 into r912;
    lt 7u8 r912 into r913;
    mul r1[7u32] r911 into r914;
    ternary r913 r914 0field into r915;
    add r910 r915 into r916;
    mul r911 11field into r917;
    sub r3 1u8 into r918;
    lt 8u8 r918 into r919;
    mul r1[8u32] r917 into r920;
    ternary r919 r920 0field into r921;
    add r916 r921 into r922;
    mul r917 11field into r923;
    sub r3 1u8 into r924;
    lt 9u8 r924 into r925;
    mul r1[9u32] r923 into r926;
    ternary r925 r926 0field into r927;
    add r922 r927 into r928;
    mul r923 11field into r929;
    sub r3 1u8 into r930;
    lt 10u8 r930 into r931;
    mul r1[10u32] r929 into r932;
    ternary r931 r932 0field into r933;
    add r928 r933 into r934;
    mul r929 11field into r935;
    sub r3 1u8 into r936;
    lt 11u8 r936 into r937;
    mul r1[11u32] r935 into r938;
    ternary r937 r938 0field into r939;
    add r934 r939 into r940;
    mul r935 11field into r941;
    sub r3 1u8 into r942;
    lt 12u8 r942 into r943;
    mul r1[12u32] r941 into r944;
    ternary r943 r944 0field into r945;
    add r940 r945 into r946;
    mul r941 11field into r947;
    sub r3 1u8 into r948;
    lt 13u8 r948 into r949;
    mul r1[13u32] r947 into r950;
    ternary r949 r950 0field into r951;
    add r946 r951 into r952;
    cast r952 11field into r953 as Share;
    cast r2[10u32] r953 into r954 as ValidatorShareData;
    mul 1field 12field into r955;
    sub r3 1u8 into r956;
    lt 0u8 r956 into r957;
    mul r1[0u32] r955 into r958;
    ternary r957 r958 0field into r959;
    add r4 r959 into r960;
    mul r955 12field into r961;
    sub r3 1u8 into r962;
    lt 1u8 r962 into r963;
    mul r1[1u32] r961 into r964;
    ternary r963 r964 0field into r965;
    add r960 r965 into r966;
    mul r961 12field into r967;
    sub r3 1u8 into r968;
    lt 2u8 r968 into r969;
    mul r1[2u32] r967 into r970;
    ternary r969 r970 0field into r971;
    add r966 r971 into r972;
    mul r967 12field into r973;
    sub r3 1u8 into r974;
    lt 3u8 r974 into r975;
    mul r1[3u32] r973 into r976;
    ternary r975 r976 0field into r977;
    add r972 r977 into r978;
    mul r973 12field into r979;
    sub r3 1u8 into r980;
    lt 4u8 r980 into r981;
    mul r1[4u32] r979 into r982;
    ternary r981 r982 0field into r983;
    add r978 r983 into r984;
    mul r979 12field into r985;
    sub r3 1u8 into r986;
    lt 5u8 r986 into r987;
    mul r1[5u32] r985 into r988;
    ternary r987 r988 0field into r989;
    add r984 r989 into r990;
    mul r985 12field into r991;
    sub r3 1u8 into r992;
    lt 6u8 r992 into r993;
    mul r1[6u32] r991 into r994;
    ternary r993 r994 0field into r995;
    add r990 r995 into r996;
    mul r991 12field into r997;
    sub r3 1u8 into r998;
    lt 7u8 r998 into r999;
    mul r1[7u32] r997 into r1000;
    ternary r999 r1000 0field into r1001;
    add r996 r1001 into r1002;
    mul r997 12field into r1003;
    sub r3 1u8 into r1004;
    lt 8u8 r1004 into r1005;
    mul r1[8u32] r1003 into r1006;
    ternary r1005 r1006 0field into r1007;
    add r1002 r1007 into r1008;
    mul r1003 12field into r1009;
    sub r3 1u8 into r1010;
    lt 9u8 r1010 into r1011;
    mul r1[9u32] r1009 into r1012;
    ternary r1011 r1012 0field into r1013;
    add r1008 r1013 into r1014;
    mul r1009 12field into r1015;
    sub r3 1u8 into r1016;
    lt 10u8 r1016 into r1017;
    mul r1[10u32] r1015 into r1018;
    ternary r1017 r1018 0field into r1019;
    add r1014 r1019 into r1020;
    mul r1015 12field into r1021;
    sub r3 1u8 into r1022;
    lt 11u8 r1022 into r1023;
    mul r1[11u32] r1021 into r1024;
    ternary r1023 r1024 0field into r1025;
    add r1020 r1025 into r1026;
    mul r1021 12field into r1027;
    sub r3 1u8 into r1028;
    lt 12u8 r1028 into r1029;
    mul r1[12u32] r1027 into r1030;
    ternary r1029 r1030 0field into r1031;
    add r1026 r1031 into r1032;
    mul r1027 12field into r1033;
    sub r3 1u8 into r1034;
    lt 13u8 r1034 into r1035;
    mul r1[13u32] r1033 into r1036;
    ternary r1035 r1036 0field into r1037;
    add r1032 r1037 into r1038;
    cast r1038 12field into r1039 as Share;
    cast r2[11u32] r1039 into r1040 as ValidatorShareData;
    mul 1field 13field into r1041;
    sub r3 1u8 into r1042;
    lt 0u8 r1042 into r1043;
    mul r1[0u32] r1041 into r1044;
    ternary r1043 r1044 0field into r1045;
    add r4 r1045 into r1046;
    mul r1041 13field into r1047;
    sub r3 1u8 into r1048;
    lt 1u8 r1048 into r1049;
    mul r1[1u32] r1047 into r1050;
    ternary r1049 r1050 0field into r1051;
    add r1046 r1051 into r1052;
    mul r1047 13field into r1053;
    sub r3 1u8 into r1054;
    lt 2u8 r1054 into r1055;
    mul r1[2u32] r1053 into r1056;
    ternary r1055 r1056 0field into r1057;
    add r1052 r1057 into r1058;
    mul r1053 13field into r1059;
    sub r3 1u8 into r1060;
    lt 3u8 r1060 into r1061;
    mul r1[3u32] r1059 into r1062;
    ternary r1061 r1062 0field into r1063;
    add r1058 r1063 into r1064;
    mul r1059 13field into r1065;
    sub r3 1u8 into r1066;
    lt 4u8 r1066 into r1067;
    mul r1[4u32] r1065 into r1068;
    ternary r1067 r1068 0field into r1069;
    add r1064 r1069 into r1070;
    mul r1065 13field into r1071;
    sub r3 1u8 into r1072;
    lt 5u8 r1072 into r1073;
    mul r1[5u32] r1071 into r1074;
    ternary r1073 r1074 0field into r1075;
    add r1070 r1075 into r1076;
    mul r1071 13field into r1077;
    sub r3 1u8 into r1078;
    lt 6u8 r1078 into r1079;
    mul r1[6u32] r1077 into r1080;
    ternary r1079 r1080 0field into r1081;
    add r1076 r1081 into r1082;
    mul r1077 13field into r1083;
    sub r3 1u8 into r1084;
    lt 7u8 r1084 into r1085;
    mul r1[7u32] r1083 into r1086;
    ternary r1085 r1086 0field into r1087;
    add r1082 r1087 into r1088;
    mul r1083 13field into r1089;
    sub r3 1u8 into r1090;
    lt 8u8 r1090 into r1091;
    mul r1[8u32] r1089 into r1092;
    ternary r1091 r1092 0field into r1093;
    add r1088 r1093 into r1094;
    mul r1089 13field into r1095;
    sub r3 1u8 into r1096;
    lt 9u8 r1096 into r1097;
    mul r1[9u32] r1095 into r1098;
    ternary r1097 r1098 0field into r1099;
    add r1094 r1099 into r1100;
    mul r1095 13field into r1101;
    sub r3 1u8 into r1102;
    lt 10u8 r1102 into r1103;
    mul r1[10u32] r1101 into r1104;
    ternary r1103 r1104 0field into r1105;
    add r1100 r1105 into r1106;
    mul r1101 13field into r1107;
    sub r3 1u8 into r1108;
    lt 11u8 r1108 into r1109;
    mul r1[11u32] r1107 into r1110;
    ternary r1109 r1110 0field into r1111;
    add r1106 r1111 into r1112;
    mul r1107 13field into r1113;
    sub r3 1u8 into r1114;
    lt 12u8 r1114 into r1115;
    mul r1[12u32] r1113 into r1116;
    ternary r1115 r1116 0field into r1117;
    add r1112 r1117 into r1118;
    mul r1113 13field into r1119;
    sub r3 1u8 into r1120;
    lt 13u8 r1120 into r1121;
    mul r1[13u32] r1119 into r1122;
    ternary r1121 r1122 0field into r1123;
    add r1118 r1123 into r1124;
    cast r1124 13field into r1125 as Share;
    cast r2[12u32] r1125 into r1126 as ValidatorShareData;
    mul 1field 14field into r1127;
    sub r3 1u8 into r1128;
    lt 0u8 r1128 into r1129;
    mul r1[0u32] r1127 into r1130;
    ternary r1129 r1130 0field into r1131;
    add r4 r1131 into r1132;
    mul r1127 14field into r1133;
    sub r3 1u8 into r1134;
    lt 1u8 r1134 into r1135;
    mul r1[1u32] r1133 into r1136;
    ternary r1135 r1136 0field into r1137;
    add r1132 r1137 into r1138;
    mul r1133 14field into r1139;
    sub r3 1u8 into r1140;
    lt 2u8 r1140 into r1141;
    mul r1[2u32] r1139 into r1142;
    ternary r1141 r1142 0field into r1143;
    add r1138 r1143 into r1144;
    mul r1139 14field into r1145;
    sub r3 1u8 into r1146;
    lt 3u8 r1146 into r1147;
    mul r1[3u32] r1145 into r1148;
    ternary r1147 r1148 0field into r1149;
    add r1144 r1149 into r1150;
    mul r1145 14field into r1151;
    sub r3 1u8 into r1152;
    lt 4u8 r1152 into r1153;
    mul r1[4u32] r1151 into r1154;
    ternary r1153 r1154 0field into r1155;
    add r1150 r1155 into r1156;
    mul r1151 14field into r1157;
    sub r3 1u8 into r1158;
    lt 5u8 r1158 into r1159;
    mul r1[5u32] r1157 into r1160;
    ternary r1159 r1160 0field into r1161;
    add r1156 r1161 into r1162;
    mul r1157 14field into r1163;
    sub r3 1u8 into r1164;
    lt 6u8 r1164 into r1165;
    mul r1[6u32] r1163 into r1166;
    ternary r1165 r1166 0field into r1167;
    add r1162 r1167 into r1168;
    mul r1163 14field into r1169;
    sub r3 1u8 into r1170;
    lt 7u8 r1170 into r1171;
    mul r1[7u32] r1169 into r1172;
    ternary r1171 r1172 0field into r1173;
    add r1168 r1173 into r1174;
    mul r1169 14field into r1175;
    sub r3 1u8 into r1176;
    lt 8u8 r1176 into r1177;
    mul r1[8u32] r1175 into r1178;
    ternary r1177 r1178 0field into r1179;
    add r1174 r1179 into r1180;
    mul r1175 14field into r1181;
    sub r3 1u8 into r1182;
    lt 9u8 r1182 into r1183;
    mul r1[9u32] r1181 into r1184;
    ternary r1183 r1184 0field into r1185;
    add r1180 r1185 into r1186;
    mul r1181 14field into r1187;
    sub r3 1u8 into r1188;
    lt 10u8 r1188 into r1189;
    mul r1[10u32] r1187 into r1190;
    ternary r1189 r1190 0field into r1191;
    add r1186 r1191 into r1192;
    mul r1187 14field into r1193;
    sub r3 1u8 into r1194;
    lt 11u8 r1194 into r1195;
    mul r1[11u32] r1193 into r1196;
    ternary r1195 r1196 0field into r1197;
    add r1192 r1197 into r1198;
    mul r1193 14field into r1199;
    sub r3 1u8 into r1200;
    lt 12u8 r1200 into r1201;
    mul r1[12u32] r1199 into r1202;
    ternary r1201 r1202 0field into r1203;
    add r1198 r1203 into r1204;
    mul r1199 14field into r1205;
    sub r3 1u8 into r1206;
    lt 13u8 r1206 into r1207;
    mul r1[13u32] r1205 into r1208;
    ternary r1207 r1208 0field into r1209;
    add r1204 r1209 into r1210;
    cast r1210 14field into r1211 as Share;
    cast r2[13u32] r1211 into r1212 as ValidatorShareData;
    mul 1field 15field into r1213;
    sub r3 1u8 into r1214;
    lt 0u8 r1214 into r1215;
    mul r1[0u32] r1213 into r1216;
    ternary r1215 r1216 0field into r1217;
    add r4 r1217 into r1218;
    mul r1213 15field into r1219;
    sub r3 1u8 into r1220;
    lt 1u8 r1220 into r1221;
    mul r1[1u32] r1219 into r1222;
    ternary r1221 r1222 0field into r1223;
    add r1218 r1223 into r1224;
    mul r1219 15field into r1225;
    sub r3 1u8 into r1226;
    lt 2u8 r1226 into r1227;
    mul r1[2u32] r1225 into r1228;
    ternary r1227 r1228 0field into r1229;
    add r1224 r1229 into r1230;
    mul r1225 15field into r1231;
    sub r3 1u8 into r1232;
    lt 3u8 r1232 into r1233;
    mul r1[3u32] r1231 into r1234;
    ternary r1233 r1234 0field into r1235;
    add r1230 r1235 into r1236;
    mul r1231 15field into r1237;
    sub r3 1u8 into r1238;
    lt 4u8 r1238 into r1239;
    mul r1[4u32] r1237 into r1240;
    ternary r1239 r1240 0field into r1241;
    add r1236 r1241 into r1242;
    mul r1237 15field into r1243;
    sub r3 1u8 into r1244;
    lt 5u8 r1244 into r1245;
    mul r1[5u32] r1243 into r1246;
    ternary r1245 r1246 0field into r1247;
    add r1242 r1247 into r1248;
    mul r1243 15field into r1249;
    sub r3 1u8 into r1250;
    lt 6u8 r1250 into r1251;
    mul r1[6u32] r1249 into r1252;
    ternary r1251 r1252 0field into r1253;
    add r1248 r1253 into r1254;
    mul r1249 15field into r1255;
    sub r3 1u8 into r1256;
    lt 7u8 r1256 into r1257;
    mul r1[7u32] r1255 into r1258;
    ternary r1257 r1258 0field into r1259;
    add r1254 r1259 into r1260;
    mul r1255 15field into r1261;
    sub r3 1u8 into r1262;
    lt 8u8 r1262 into r1263;
    mul r1[8u32] r1261 into r1264;
    ternary r1263 r1264 0field into r1265;
    add r1260 r1265 into r1266;
    mul r1261 15field into r1267;
    sub r3 1u8 into r1268;
    lt 9u8 r1268 into r1269;
    mul r1[9u32] r1267 into r1270;
    ternary r1269 r1270 0field into r1271;
    add r1266 r1271 into r1272;
    mul r1267 15field into r1273;
    sub r3 1u8 into r1274;
    lt 10u8 r1274 into r1275;
    mul r1[10u32] r1273 into r1276;
    ternary r1275 r1276 0field into r1277;
    add r1272 r1277 into r1278;
    mul r1273 15field into r1279;
    sub r3 1u8 into r1280;
    lt 11u8 r1280 into r1281;
    mul r1[11u32] r1279 into r1282;
    ternary r1281 r1282 0field into r1283;
    add r1278 r1283 into r1284;
    mul r1279 15field into r1285;
    sub r3 1u8 into r1286;
    lt 12u8 r1286 into r1287;
    mul r1[12u32] r1285 into r1288;
    ternary r1287 r1288 0field into r1289;
    add r1284 r1289 into r1290;
    mul r1285 15field into r1291;
    sub r3 1u8 into r1292;
    lt 13u8 r1292 into r1293;
    mul r1[13u32] r1291 into r1294;
    ternary r1293 r1294 0field into r1295;
    add r1290 r1295 into r1296;
    cast r1296 15field into r1297 as Share;
    cast r2[14u32] r1297 into r1298 as ValidatorShareData;
    mul 1field 16field into r1299;
    sub r3 1u8 into r1300;
    lt 0u8 r1300 into r1301;
    mul r1[0u32] r1299 into r1302;
    ternary r1301 r1302 0field into r1303;
    add r4 r1303 into r1304;
    mul r1299 16field into r1305;
    sub r3 1u8 into r1306;
    lt 1u8 r1306 into r1307;
    mul r1[1u32] r1305 into r1308;
    ternary r1307 r1308 0field into r1309;
    add r1304 r1309 into r1310;
    mul r1305 16field into r1311;
    sub r3 1u8 into r1312;
    lt 2u8 r1312 into r1313;
    mul r1[2u32] r1311 into r1314;
    ternary r1313 r1314 0field into r1315;
    add r1310 r1315 into r1316;
    mul r1311 16field into r1317;
    sub r3 1u8 into r1318;
    lt 3u8 r1318 into r1319;
    mul r1[3u32] r1317 into r1320;
    ternary r1319 r1320 0field into r1321;
    add r1316 r1321 into r1322;
    mul r1317 16field into r1323;
    sub r3 1u8 into r1324;
    lt 4u8 r1324 into r1325;
    mul r1[4u32] r1323 into r1326;
    ternary r1325 r1326 0field into r1327;
    add r1322 r1327 into r1328;
    mul r1323 16field into r1329;
    sub r3 1u8 into r1330;
    lt 5u8 r1330 into r1331;
    mul r1[5u32] r1329 into r1332;
    ternary r1331 r1332 0field into r1333;
    add r1328 r1333 into r1334;
    mul r1329 16field into r1335;
    sub r3 1u8 into r1336;
    lt 6u8 r1336 into r1337;
    mul r1[6u32] r1335 into r1338;
    ternary r1337 r1338 0field into r1339;
    add r1334 r1339 into r1340;
    mul r1335 16field into r1341;
    sub r3 1u8 into r1342;
    lt 7u8 r1342 into r1343;
    mul r1[7u32] r1341 into r1344;
    ternary r1343 r1344 0field into r1345;
    add r1340 r1345 into r1346;
    mul r1341 16field into r1347;
    sub r3 1u8 into r1348;
    lt 8u8 r1348 into r1349;
    mul r1[8u32] r1347 into r1350;
    ternary r1349 r1350 0field into r1351;
    add r1346 r1351 into r1352;
    mul r1347 16field into r1353;
    sub r3 1u8 into r1354;
    lt 9u8 r1354 into r1355;
    mul r1[9u32] r1353 into r1356;
    ternary r1355 r1356 0field into r1357;
    add r1352 r1357 into r1358;
    mul r1353 16field into r1359;
    sub r3 1u8 into r1360;
    lt 10u8 r1360 into r1361;
    mul r1[10u32] r1359 into r1362;
    ternary r1361 r1362 0field into r1363;
    add r1358 r1363 into r1364;
    mul r1359 16field into r1365;
    sub r3 1u8 into r1366;
    lt 11u8 r1366 into r1367;
    mul r1[11u32] r1365 into r1368;
    ternary r1367 r1368 0field into r1369;
    add r1364 r1369 into r1370;
    mul r1365 16field into r1371;
    sub r3 1u8 into r1372;
    lt 12u8 r1372 into r1373;
    mul r1[12u32] r1371 into r1374;
    ternary r1373 r1374 0field into r1375;
    add r1370 r1375 into r1376;
    mul r1371 16field into r1377;
    sub r3 1u8 into r1378;
    lt 13u8 r1378 into r1379;
    mul r1[13u32] r1377 into r1380;
    ternary r1379 r1380 0field into r1381;
    add r1376 r1381 into r1382;
    cast r1382 16field into r1383 as Share;
    cast r2[15u32] r1383 into r1384 as ValidatorShareData;
    cast  r94 r180 r266 r352 r438 r524 r610 r696 r782 r868 r954 r1040 r1126 r1212 r1298 r1384 into r1385 as [ValidatorShareData; 16u32];
    call protocol_transfers.aleo/submit_shares_to_validators r1385 r7 into r1386 r1387 r1388 r1389 r1390 r1391 r1392 r1393 r1394 r1395 r1396 r1397 r1398 r1399 r1400 r1401;
    call protocol_core.aleo/custody_data_as_program r8 r2 into r1402;
    async custody_data_as_program r1402 into r1403;
    output r1403 as secret_custody_protocol.aleo/custody_data_as_program.future;

finalize custody_data_as_program:
    input r0 as protocol_core.aleo/custody_data_as_program.future;
    await r0;




function request_data_as_program:
    input r0 as address.private;
    input r1 as address.private;
    input r2 as u8.private;
    input r3 as [address; 16u32].public;
    input r4 as u64.public;
    input r5 as credits.aleo/credits.record;
    assert.neq self.caller self.signer;
    cast self.caller r0 r2 into r6 as Custody;
    hash.bhp256 r6 into r7 as field;
    cast  r3[0u32] r3[1u32] r3[2u32] r3[3u32] r3[4u32] r3[5u32] r3[6u32] r3[7u32] r3[8u32] r3[9u32] r3[10u32] r3[11u32] r3[12u32] r3[13u32] r3[14u32] r3[15u32] into r8 as [address; 16u32];
    call protocol_transfers.aleo/submit_requests_to_validators r8 r7 r1 into r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24;
    cast r2 into r25 as u64;
    mul r25 r4 into r26;
    call credits.aleo/transfer_private_to_public r5 secret_custody_protocol.aleo r26 into r27 r28;
    call protocol_core.aleo/request_data_as_program r7 r3 r4 into r29;
    async request_data_as_program r29 r28 into r30;
    output r27 as credits.aleo/credits.record;
    output r30 as secret_custody_protocol.aleo/request_data_as_program.future;

finalize request_data_as_program:
    input r0 as protocol_core.aleo/request_data_as_program.future;
    input r1 as credits.aleo/transfer_private_to_public.future;
    await r0;
    await r1;




function assert_completed_as_program:
    input r0 as address.private;
    input r1 as u8.public;
    assert.neq self.caller self.signer;
    cast self.caller r0 r1 into r2 as Custody;
    hash.bhp256 r2 into r3 as field;
    async assert_completed_as_program r3 r1 into r4;
    output r4 as secret_custody_protocol.aleo/assert_completed_as_program.future;

finalize assert_completed_as_program:
    input r0 as field.public;
    input r1 as u8.public;
    get protocol_core.aleo/custodies[r0] into r2;
    gte r2.submitted_shares r1 into r3;
    assert.eq r3 true;

